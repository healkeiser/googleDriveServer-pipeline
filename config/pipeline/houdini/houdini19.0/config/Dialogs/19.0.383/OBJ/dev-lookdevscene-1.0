// Magic: 66bd78e5
// Automatically generated PSI dialog (PSI version 19.0.383)
// Tue Nov 30 17:14:20 2021


f_tmp = FLOAT_FIELD;	// dialog.top.ui
xOrd.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

    {  }

    {  }
}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    rOrd.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


t.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);
   PARM(float, 3, "t", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(t.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_transform" VALUE(t.script_action)
	HELP("Select an object to match the translation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

r.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);
   PARM(float, 3, "r", none, none, "X,Y,Z")
	RANGE(0,360)  LABELREF(r.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_rotation" VALUE(r.script_action)
	HELP("Select an object to match the rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

s.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);
   PARM(float, 3, "s", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(s.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_scale" VALUE(s.script_action)
	HELP("Select an object to match the scale with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

p.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   p.label = PARM_LABEL("Pivot Translate", "p") WIDTH(1.5);
   PARM(float, 3, "p", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(p.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot" VALUE(p.script_action)
	HELP("Select an object to match the pivot with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

pr.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   pr.label = PARM_LABEL("Pivot Rotate", "pr") WIDTH(1.5);
   PARM(float, 3, "pr", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(pr.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot_rotation" VALUE(pr.script_action)
	HELP("Select an object to match the pivot rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

scale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

  { WIDTH(0.1) }
}

pre_xform.gad = ROW
{
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.099) }

    pre_xform.menu;
}

keeppos.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keeppos", "Keep Position When Parenting") toggle VALUE(keeppos.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

childcomp.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("childcomp", "Child Compensation") toggle VALUE(childcomp.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

constraints_on.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("constraints_on", "Enable Constraints") toggle VALUE(constraints_on.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

constraints_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 constraints_path.label = PARM_LABEL("Constraints", "constraints_path") WIDTH(1.5);
 PARM_FIELD(pathstring, "constraints_path") VALUE(constraints_path.val) 
	LABELREF(constraints_path.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(constraints_path.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(constraints_path.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

    ACTION_ICONBUTTON "BUTTONS_add_constraints" VALUE(constraints_path.script_action)
	HELP("")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 { WIDTH(0.1) }
}
lookatpath.gad = NULL { }
lookupobjpath.gad = NULL { }
lookup.gad = NULL { }
pathobjpath.gad = NULL { }
roll.gad = NULL { }
pos.gad = NULL { }
uparmtype.gad = NULL { }
pathorient.gad = NULL { }
up.gad = NULL { }
bank.gad = NULL { }
label1.gad = NULL { }
label2.gad = NULL { }
label3.gad = NULL { }
label4.gad = NULL { }
tdisplay.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tdisplay.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val) RETAIN_SIZE_WHEN_HIDDEN;

display.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 display.label = PARM_LABEL("Display", "display") WIDTH(1.32);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


outputobj.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Output Transform", "outputobj") WIDTH(1.5);
    { WIDTH(0.09) }

    outputobj.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

visibleobjects.gad = 
{
 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 visibleobjects.label = PARM_LABEL("Visible Children", "visibleobjects") WIDTH(1.5);
 PARM_FIELD (pathstring, "visibleobjects") LABELREF(visibleobjects.label) 
	VALUE(visibleobjects.val) HSTRETCH;

    visibleobjects.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(visibleobjects.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

picking.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("picking", "Viewport Selecting Enabled") toggle VALUE(picking.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

pickscript.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 pickscript.label = PARM_LABEL("Select Script", "pickscript") WIDTH(1.5);

 PARM_FIELD (pathstring, "pickscript") LABELREF(pickscript.label)
	VALUE(pickscript.val) HSTRETCH;

    pickscript.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(pickscript.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

caching.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Cache Object Transform") toggle VALUE(caching.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
use_dcolor.gad = NULL { }
dcolor.gad = NULL { }

assetPath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 assetPath.label = PARM_LABEL("Asset", "assetPath") WIDTH(1.5);
 PARM_FIELD(pathstring, "assetPath") VALUE(assetPath.val) 
	LABELREF(assetPath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(assetPath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(assetPath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

rotateYAll.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rotateYAll.label = PARM_LABEL("Rotate Asset", "rotateYAll") WIDTH(1.5);
 PARM(float, 1, "rotateYAll", none, none) RANGE(0,360)
	LOCK_RANGE LABELREF(rotateYAll.label) HSTRETCH;

  { WIDTH(0.1) }
}

rotateYLight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 rotateYLight.label = PARM_LABEL("Rotate Light", "rotateYLight") WIDTH(1.5);
 PARM(float, 1, "rotateYLight", none, none) RANGE(0,360)
	LOCK_RANGE LABELREF(rotateYLight.label) HSTRETCH;

  { WIDTH(0.1) }
}

sceneScale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 sceneScale.label = PARM_LABEL("Scene Scale", "sceneScale") WIDTH(1.5);
 PARM(float, 1, "sceneScale", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(sceneScale.label) HSTRETCH;

  { WIDTH(0.1) }
}

enableBackdrop.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableBackdrop", "Enable Backdrop") toggle VALUE(enableBackdrop.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

enableShadow.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableShadow", "Enable Shadow Catcher") toggle VALUE(enableShadow.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

backdropColor.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    backdropColor.label = PARM_LABEL("Color", "backdropColor") WIDTH(1.5);
    PARM(float, 3, "backdropColor", none, COLOR, "R,G,B") 
	LABELREF(backdropColor.label) HSTRETCH;

    { WIDTH(0.1) }
}

texture.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 texture.label = PARM_LABEL("Texture", "texture") WIDTH(1.5);

 PARM_FIELD (pathstring, "texture") LABELREF(texture.label)
	VALUE(texture.val) HSTRETCH;

    texture.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(texture.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

    ACTION_ICONBUTTON "BUTTONS_reload" VALUE(texture.script_action)
	HELP("Refresh texture in IPR.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 { WIDTH(0.1) }
}

enableCamera.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableCamera", "Enable Camera") toggle VALUE(enableCamera.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

epxosure.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 epxosure.label = PARM_LABEL("Exposure", "epxosure") WIDTH(1.5);
 PARM(float, 1, "epxosure", none, none) RANGE(0,10)
	 LABELREF(epxosure.label) HSTRETCH;

  { WIDTH(0.1) }
}
res.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

res.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   res.label = PARM_LABEL("Resolution", "res") WIDTH(1.5);
   PARM(integer, 2, "res", none, none, "X,Y")
	RANGE(-1,1)  LABELREF(res.label)
	HSTRETCH;

    {  }
}

resMenu.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    resMenu.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

}
}	// Template join.bot


zoom.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 zoom.label = PARM_LABEL("Zoom", "zoom") WIDTH(1.5);
 PARM(float, 1, "zoom", none, none) RANGE(-10,10)
	 LABELREF(zoom.label) HSTRETCH;

  { WIDTH(0.1) }
}

dolly.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 dolly.label = PARM_LABEL("Dolly", "dolly") WIDTH(1.5);
 PARM(float, 1, "dolly", none, none) RANGE(-10,10)
	 LABELREF(dolly.label) HSTRETCH;

  { WIDTH(0.1) }
}

enableBalls.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableBalls", "Balls") toggle VALUE(enableBalls.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

enableMacbeth.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableMacbeth", "Macbeth") toggle VALUE(enableMacbeth.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

screenPositionBalls.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Screen Position", "screenPositionBalls") WIDTH(1.5);
    { WIDTH(0.09) }

    screenPositionBalls.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

zDistanceBalls.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 zDistanceBalls.label = PARM_LABEL("Z Distance", "zDistanceBalls") WIDTH(1.5);
 PARM(float, 1, "zDistanceBalls", none, none) RANGE(0.01,50)
	LOCK_RANGE_MIN LABELREF(zDistanceBalls.label) HSTRETCH;

  { WIDTH(0.1) }
}

scaleBalls.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scaleBalls.label = PARM_LABEL("Scale", "scaleBalls") WIDTH(1.5);
 PARM(float, 1, "scaleBalls", none, none) RANGE(0,1)
	 LABELREF(scaleBalls.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

renderChrome.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("renderChrome", "Chrome") toggle VALUE(renderChrome.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

renderWhite.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("renderWhite", "White") toggle VALUE(renderWhite.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

renderGrey.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("renderGrey", "Grey") toggle VALUE(renderGrey.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

scaleMacbeth.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scaleMacbeth.label = PARM_LABEL("Scale", "scaleMacbeth") WIDTH(1.5);
 PARM(float, 1, "scaleMacbeth", none, none) RANGE(0,10)
	 LABELREF(scaleMacbeth.label) HSTRETCH;

  { WIDTH(0.1) }
}

ballsFolder.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "ballsFolder.gad"
    { 
	VALUE(ballsFolder.gad.val) STRETCH(1,0)

	TAB "Balls"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    screenPositionBalls.gad;		
	    zDistanceBalls.gad;		
	    scaleBalls.gad;		
	    sepparm2.gad;		
	    renderChrome.gad;		
	    renderWhite.gad;		
	    renderGrey.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Macbeth"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    scaleMacbeth.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

folderBackdrop.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folderBackdrop.gad"
    { 
	VALUE(folderBackdrop.gad.val) STRETCH(1,0)

	TAB "Backdrop"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enableBackdrop.gad;		
	    enableShadow.gad;		
	    backdropColor.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Light"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    texture.gad;		
	    enableCamera.gad;		
	    epxosure.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Camera"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    res.row.join;		
	    zoom.gad;		
	    dolly.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

stdswitcher3.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "stdswitcher3.gad"
    { 
	VALUE(stdswitcher3.gad.val) STRETCH(1,0)

	TAB "General"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    assetPath.gad;		
	    sepparm.gad;		
	    rotateYAll.gad;		
	    rotateYLight.gad;		
	    sceneScale.gad;		
	    folderBackdrop.gad;		

	    { STRETCH(1,1) }
	}

	TAB "References"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    enableBalls.gad;		
	    enableMacbeth.gad;		
	    ballsFolder.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    stdswitcher3.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
