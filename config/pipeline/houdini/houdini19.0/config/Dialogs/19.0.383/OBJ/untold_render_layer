// Magic: 13146726
// Automatically generated PSI dialog (PSI version 19.0.383)
// Tue Dec 14 00:15:29 2021


f_tmp = FLOAT_FIELD;	// dialog.top.ui
layer_name.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

layer_name.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    layer_name.label = PARM_LABEL("Name", "layer_name") WIDTH(1.5);
    PARM_FIELD(string, "layer_name") VALUE(layer_name.val) 
	LABELREF(layer_name.label) HSTRETCH;

    {  }
}

renderer.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    PARM_LABEL_SIMPLE("  Renderer", "renderer") ;
    { WIDTH(0.09) }

    renderer.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

enable_render.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_render", "Enable Render") toggle VALUE(enable_render.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

enable_phantom.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_phantom", "Enable Phantom") toggle VALUE(enable_phantom.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

enable_matte.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_matte", "Enable Matte") toggle VALUE(enable_matte.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

enable_shadow.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_shadow", "Enable Shadow") toggle VALUE(enable_shadow.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

rop.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 rop.label = PARM_LABEL("ROP", "rop") WIDTH(1.5);
 PARM_FIELD(pathstring, "rop") VALUE(rop.val) 
	LABELREF(rop.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(rop.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(rop.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}
add_to.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

add_to.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Add To", "add_to") WIDTH(1.5);
    { WIDTH(0.09) }

    add_to.menu;

    {  }

    {  }
}

add_layer.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("add_layer", "Add Layer")
	push VALUE(add_layer.val);

    { WIDTH(0.1) }
}
}	// Template join.bot


addObjects.parm =
{
    LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Add Object", "addObjects") WIDTH(1.5);
    { WIDTH(0.1) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center) VALUE(addObjects.val)

        addObjects.field = PARM_FIELD (integer, "addObjects")
				VALUE(addObjects.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(addObjects.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(addObjects.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(addObjects.clear.val);
    }

    { HSTRETCH }
}

addObjects.multilist = 
{
    LAYOUT(vertical) HSTRETCH MARGIN(0.05)
}

addObjects.gad =
{
    LAYOUT(vertical) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	LAYOUT(vertical) HSTRETCH

	VALUE(addObjects.multilist_hide_buttons.val)
	{
	    LAYOUT(vertical) HSTRETCH
	    addObjects.parm;
	    {LOOK(none) HEIGHT(0.02)}
	}
	{
	}
    }
    addObjects.multilist;
}

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

shop_materialpath2.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 shop_materialpath2.label = PARM_LABEL("Render Material", "shop_materialpath2") WIDTH(1.5);
 PARM_FIELD(pathstring, "shop_materialpath2") VALUE(shop_materialpath2.val) 
	LABELREF(shop_materialpath2.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(shop_materialpath2.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(shop_materialpath2.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

shop_materialpath3.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 shop_materialpath3.label = PARM_LABEL("Phantom Material", "shop_materialpath3") WIDTH(1.5);
 PARM_FIELD(pathstring, "shop_materialpath3") VALUE(shop_materialpath3.val) 
	LABELREF(shop_materialpath3.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(shop_materialpath3.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(shop_materialpath3.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

shop_materialpath4.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 shop_materialpath4.label = PARM_LABEL("Matte Material", "shop_materialpath4") WIDTH(1.5);
 PARM_FIELD(pathstring, "shop_materialpath4") VALUE(shop_materialpath4.val) 
	LABELREF(shop_materialpath4.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(shop_materialpath4.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(shop_materialpath4.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

shop_materialpathShadow.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 shop_materialpathShadow.label = PARM_LABEL("Shadow Material", "shop_materialpathShadow") WIDTH(1.5);
 PARM_FIELD(pathstring, "shop_materialpathShadow") VALUE(shop_materialpathShadow.val) 
	LABELREF(shop_materialpathShadow.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(shop_materialpathShadow.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(shop_materialpathShadow.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

sepparm3.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

ar_subdiv_type.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Type", "ar_subdiv_type") WIDTH(1.5);
    { WIDTH(0.09) }

    ar_subdiv_type.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

ar_subdiv_iterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ar_subdiv_iterations.label = PARM_LABEL("Iterations", "ar_subdiv_iterations") WIDTH(1.5);
 PARM(integer, 1, "ar_subdiv_iterations", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(ar_subdiv_iterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

ar_disp_height.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ar_disp_height.label = PARM_LABEL("Height", "ar_disp_height") WIDTH(1.5);
 PARM(float, 1, "ar_disp_height", none, none) RANGE(0,10)
	 LABELREF(ar_disp_height.label) HSTRETCH;

  { WIDTH(0.1) }
}

ar_disp_zero_value.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ar_disp_zero_value.label = PARM_LABEL("Zero Value", "ar_disp_zero_value") WIDTH(1.5);
 PARM(float, 1, "ar_disp_zero_value", none, none) RANGE(0,1)
	 LABELREF(ar_disp_zero_value.label) HSTRETCH;

  { WIDTH(0.1) }
}

ar_disp_padding.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ar_disp_padding.label = PARM_LABEL("Bounds Padding", "ar_disp_padding") WIDTH(1.5);
 PARM(float, 1, "ar_disp_padding", none, none) RANGE(0,10)
	 LABELREF(ar_disp_padding.label) HSTRETCH;

  { WIDTH(0.1) }
}

ar_disp_autobump.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("ar_disp_autobump", "Autobump") toggle VALUE(ar_disp_autobump.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

ar_self_shadows.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("ar_self_shadows", "Self Shadows") toggle VALUE(ar_self_shadows.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

ar_min_pixel_width.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ar_min_pixel_width.label = PARM_LABEL("Minimum Pixel Width", "ar_min_pixel_width") WIDTH(1.5);
 PARM(float, 1, "ar_min_pixel_width", none, none) RANGE(0,10)
	 LABELREF(ar_min_pixel_width.label) HSTRETCH;

  { WIDTH(0.1) }
}

ar_radius.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ar_radius.label = PARM_LABEL("Default Radius", "ar_radius") WIDTH(1.5);
 PARM(float, 1, "ar_radius", none, none) RANGE(0,10)
	 LABELREF(ar_radius.label) HSTRETCH;

  { WIDTH(0.1) }
}

reflectmask.gad = 
{
 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 reflectmask.label = PARM_LABEL("Reflection Mask", "reflectmask") WIDTH(1.5);
 PARM_FIELD (pathstring, "reflectmask") LABELREF(reflectmask.label) 
	VALUE(reflectmask.val) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(reflectmask.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

refractmask.gad = 
{
 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 refractmask.label = PARM_LABEL("Refraction Mask", "refractmask") WIDTH(1.5);
 PARM_FIELD (pathstring, "refractmask") LABELREF(refractmask.label) 
	VALUE(refractmask.val) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(refractmask.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

lightmask.gad = 
{
 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 lightmask.label = PARM_LABEL("Light Mask", "lightmask") WIDTH(1.5);
 PARM_FIELD (pathstring, "lightmask") LABELREF(lightmask.label) 
	VALUE(lightmask.val) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(lightmask.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

lightcategories.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    lightcategories.label = PARM_LABEL("Light Selection", "lightcategories") WIDTH(1.5);
    PARM_FIELD(string, "lightcategories") VALUE(lightcategories.val) 
	LABELREF(lightcategories.label) HSTRETCH;

    { WIDTH(0.1) }
}

vm_matte.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vm_matte", "Matte shading") toggle VALUE(vm_matte.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

vm_rayshade.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vm_rayshade", "Raytrace Shading") toggle VALUE(vm_rayshade.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

tmp.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    tmp.label = PARM_LABEL("tmp", "tmp") WIDTH(1.5);
    PARM_FIELD(string, "tmp") VALUE(tmp.val) 
	LABELREF(tmp.label) HSTRETCH;

    { WIDTH(0.1) }
}

tmpButton.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("tmpButton", "tmp")
	push VALUE(tmpButton.val);

    { WIDTH(0.1) }
}
xOrd.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

    {  }

    {  }
}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    rOrd.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


t.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);
   PARM(float, 3, "t", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(t.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_transform" VALUE(t.script_action)
	HELP("Select an object to match the translation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

r.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);
   PARM(float, 3, "r", none, none, "X,Y,Z")
	RANGE(0,360)  LABELREF(r.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_rotation" VALUE(r.script_action)
	HELP("Select an object to match the rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

s.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);
   PARM(float, 3, "s", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(s.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_scale" VALUE(s.script_action)
	HELP("Select an object to match the scale with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

p.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   p.label = PARM_LABEL("Pivot Translate", "p") WIDTH(1.5);
   PARM(float, 3, "p", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(p.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot" VALUE(p.script_action)
	HELP("Select an object to match the pivot with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

pr.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   pr.label = PARM_LABEL("Pivot Rotate", "pr") WIDTH(1.5);
   PARM(float, 3, "pr", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(pr.label)
	HSTRETCH;

    ACTION_ICONBUTTON "BUTTONS_match_pivot_rotation" VALUE(pr.script_action)
	HELP("Select an object to match the pivot rotation with.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

scale.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

  { WIDTH(0.1) }
}

pre_xform.gad = ROW
{
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.099) }

    pre_xform.menu;
}

keeppos.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("keeppos", "Keep Position When Parenting") toggle VALUE(keeppos.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

childcomp.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("childcomp", "Child Compensation") toggle VALUE(childcomp.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

constraints_on.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("constraints_on", "Enable Constraints") toggle VALUE(constraints_on.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

constraints_path.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 constraints_path.label = PARM_LABEL("Constraints", "constraints_path") WIDTH(1.5);
 PARM_FIELD(pathstring, "constraints_path") VALUE(constraints_path.val) 
	LABELREF(constraints_path.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(constraints_path.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(constraints_path.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

    ACTION_ICONBUTTON "BUTTONS_add_constraints" VALUE(constraints_path.script_action)
	HELP("")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 { WIDTH(0.1) }
}
lookatpath.gad = NULL { }
lookupobjpath.gad = NULL { }
lookup.gad = NULL { }
pathobjpath.gad = NULL { }
roll.gad = NULL { }
pos.gad = NULL { }
uparmtype.gad = NULL { }
pathorient.gad = NULL { }
up.gad = NULL { }
bank.gad = NULL { }
label1.gad = NULL { }
label2.gad = NULL { }
label3.gad = NULL { }
label4.gad = NULL { }
tdisplay.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tdisplay.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val) RETAIN_SIZE_WHEN_HIDDEN;

display.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 display.label = PARM_LABEL("Display", "display") WIDTH(1.32);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


outputobj.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Output Transform", "outputobj") WIDTH(1.5);
    { WIDTH(0.09) }

    outputobj.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

visibleobjects.gad = 
{
 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 visibleobjects.label = PARM_LABEL("Visible Children", "visibleobjects") WIDTH(1.5);
 PARM_FIELD (pathstring, "visibleobjects") LABELREF(visibleobjects.label) 
	VALUE(visibleobjects.val) HSTRETCH;

    visibleobjects.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(visibleobjects.plus) LOOKFLAT
    HELP("Open floating bundle chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

picking.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("picking", "Viewport Selecting Enabled") toggle VALUE(picking.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

pickscript.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 pickscript.label = PARM_LABEL("Select Script", "pickscript") WIDTH(1.5);

 PARM_FIELD (pathstring, "pickscript") LABELREF(pickscript.label)
	VALUE(pickscript.val) HSTRETCH;

    pickscript.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(pickscript.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

caching.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("caching", "Cache Object Transform") toggle VALUE(caching.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}
use_dcolor.gad = NULL { }
dcolor.gad = NULL { }

folder2.gad = 
GROUP collapsible "Temporary" flat  
{
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH
} 

folder6.gad = 

GROUP simple "Shading" flat 
{ 
    VALUE(folder6.gad.val) LAYOUT(vertical) HSTRETCH 
	    reflectmask.gad;		
	    refractmask.gad;		
	    lightmask.gad;		
	    lightcategories.gad;		
	    vm_matte.gad;		
	    vm_rayshade.gad;		
} 

folderArnold_1.gad = 
GROUP collapsible "Mantra" flat  
{
    VALUE(folderArnold_1.gad.val) LAYOUT(vertical) HSTRETCH
	    folder6.gad;		
} 

folder8.gad = 

GROUP simple "Shapes" flat 
{ 
    VALUE(folder8.gad.val) LAYOUT(vertical) HSTRETCH 
	    ar_min_pixel_width.gad;		
	    ar_radius.gad;		
} 

folder5.gad = 

GROUP simple "Visibility" flat 
{ 
    VALUE(folder5.gad.val) LAYOUT(vertical) HSTRETCH 
	    ar_self_shadows.gad;		
} 

folder4.gad = 

GROUP simple "Displacement" flat 
{ 
    VALUE(folder4.gad.val) LAYOUT(vertical) HSTRETCH 
	    ar_disp_height.gad;		
	    ar_disp_zero_value.gad;		
	    ar_disp_padding.gad;		
	    ar_disp_autobump.gad;		
} 

folder3.gad = 

GROUP simple "Subdivision" flat 
{ 
    VALUE(folder3.gad.val) LAYOUT(vertical) HSTRETCH 
	    ar_subdiv_type.gad;		
	    ar_subdiv_iterations.gad;		
} 

folderArnold.gad = 
GROUP collapsible "Arnold" flat  
{
    VALUE(folderArnold.gad.val) LAYOUT(vertical) HSTRETCH
	    folder3.gad;		
	    folder4.gad;		
	    folder5.gad;		
	    folder8.gad;		
} 

folder11_3.gad = 
GROUP collapsible "Shadow" flat  
{
    VALUE(folder11_3.gad.val) LAYOUT(vertical) HSTRETCH
	    shop_materialpathShadow.gad;		
} 

folder11_2.gad = 
GROUP collapsible "Matte" flat  
{
    VALUE(folder11_2.gad.val) LAYOUT(vertical) HSTRETCH
	    shop_materialpath4.gad;		
} 

folder11_1.gad = 
GROUP collapsible "Phantom" flat  
{
    VALUE(folder11_1.gad.val) LAYOUT(vertical) HSTRETCH
	    shop_materialpath3.gad;		
} 

folder11.gad = 
GROUP collapsible "Render" flat  
{
    VALUE(folder11.gad.val) LAYOUT(vertical) HSTRETCH
	    shop_materialpath2.gad;		
} 

folder1.gad = 

GROUP simple "Objects" flat 
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    addObjects.gad;		
} 

folder9.gad = 

GROUP simple "Render" flat 
{ 
    VALUE(folder9.gad.val) LAYOUT(vertical) HSTRETCH 
	    rop.gad;		
	    add_to.row.join;		
} 

folder0.gad = 

GROUP simple "General" flat 
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    layer_name.row.join;		
	    sepparm.gad;		
	    enable_render.gad;		
	    enable_phantom.gad;		
	    enable_matte.gad;		
	    enable_shadow.gad;		
} 

stdswitcher3_2.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "stdswitcher3_2.gad"
    { 
	VALUE(stdswitcher3_2.gad.val) STRETCH(1,0)

	TAB "Valentin"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder0.gad;		
	    folder9.gad;		
	    folder1.gad;		
	    sepparm2.gad;		
	    folder11.gad;		
	    folder11_1.gad;		
	    folder11_2.gad;		
	    folder11_3.gad;		
	    sepparm3.gad;		
	    folderArnold.gad;		
	    folderArnold_1.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Transform"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    xOrd.row.join;		
	    t.gad;		
	    r.gad;		
	    s.gad;		
	    p.gad;		
	    pr.gad;		
	    scale.gad;		
	    pre_xform.gad;		
	    keeppos.gad;		
	    childcomp.gad;		
	    constraints_on.gad;		
	    constraints_path.gad;		
	    lookatpath.gad;		
	    lookupobjpath.gad;		
	    lookup.gad;		
	    pathobjpath.gad;		
	    roll.gad;		
	    pos.gad;		
	    uparmtype.gad;		
	    pathorient.gad;		
	    up.gad;		
	    bank.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    stdswitcher3_2.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
