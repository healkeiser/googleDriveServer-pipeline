{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}}, {"type": "dt", "indent": 0, "text": ["Command"], "extent": [1018, 1027], "body": [{"type": "para", "indent": 4, "text": ["The command line (executable and arguments) to run when the work item runs.\n    If this field is empty the work item will not be scheduled, and will be\n    instantly marked done once all of its dependencies finish. "], "extent": [1049, 1270]}], "container": true, "attrs": {"id": "pdg_command"}}, {"type": "dt", "indent": 0, "text": ["Cache Mode"], "extent": [1270, 1282], "body": [{"type": "para", "indent": 4, "text": ["Determines how the processor node handles work items that report expected file results."], "extent": [1306, 1399]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [1399, 1414], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as\n        cooked without being scheduled. If the file ", {"type": "em", "text": ["does not"]}, " exist on disk, the work item is scheduled as normal. If upstream work item dependencies write out new\n        files during a cook, the cache files on work items in this node will\n        also be marked as out-of-date."], "extent": [1414, 1775]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic (Ignore Upstream)"], "extent": [1775, 1808], "body": [{"type": "para", "indent": 8, "text": ["The same as ", {"type": "ui", "text": ["Automatic"]}, ", except upstream file writes ", {"type": "em", "text": ["do not"]}, " invalidate\n        cache files on work items in this node and this node will only check output files for its own work items."], "extent": [1808, 2006]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read Files"], "extent": [2006, 2022], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as cooked without being scheduled. Otherwise the work item is marked as failed."], "extent": [2022, 2179]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write Files"], "extent": [2179, 2196], "body": [{"type": "para", "indent": 8, "text": ["Work items are always scheduled and the expected result file is ignored even if it exists on disk."], "extent": [2196, 2304]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_cachemode"}}, {"type": "dt", "indent": 0, "text": ["File Dependencies"], "extent": [2304, 2323], "body": [{"type": "para", "indent": 4, "text": ["A list of files that should be copied to the PDG working directory before the first work item in this node is executed.  This can be used to ensure that supporting files like digital assets and custom scripts are available for the work item job."], "extent": [2345, 2596]}, {"type": "para", "indent": 4, "text": ["The specified paths can be absolute or relative to HOUDINI_PATH."], "extent": [2596, 2666]}], "container": true, "attrs": {"id": "pdgnodedeps"}}, {"type": "dt", "indent": 0, "text": ["Evaluate Using"], "extent": [2666, 2682], "body": [{"type": "para", "indent": 4, "text": ["Determines how the TOP node creates and executes work items."], "extent": [2708, 2774]}, {"type": "para", "indent": 4, "text": ["When using the ", {"type": "ui", "text": ["Single Frame"]}, " option, the node creates one work item for each upstream\n    frame. When using the ", {"type": "ui", "text": ["Frame Range"]}, " option, the node creates one work item per frame\n    in the range for each upstream work item. When using the ", {"type": "ui", "text": ["ROP Node Configuration"]}, " option, PDG cooks the ROP without passing any frame range options and uses whatever configuration is set on the target ROP. When using the ", {"type": "ui", "text": ["Automatic"]}, " option, the node automatically configures the node based on whether or not it has any inputs."], "extent": [2774, 3294]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Single Frame"], "extent": [3294, 3312], "body": [{"type": "para", "indent": 11, "text": ["The node creates a single work item per upstream item and sets the new work item\u2019s frame to match the upstream item\u2019s frame. If there are no input nodes, then the node creates a single work item set to frame 1. You can override the single frame value with the ", {"type": "ui", "text": ["Override Frame"]}, " parameter."], "extent": [3312, 3614]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Frame Range"], "extent": [3614, 3631], "body": [{"type": "para", "indent": 11, "text": ["For each upstream work item, the node creates the full frame range of work items. If there are no upstream items, the node creates one set of items for the specified frame range."], "extent": [3631, 3822]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [3822, 3837], "body": [{"type": "para", "indent": 8, "text": ["If the node has inputs, it generates one frame of work for each input. If the node does not have any inputs, it generates work items for the node\u2019s full frame range."], "extent": [3837, 4012]}], "container": true}, {"type": "dt", "indent": 4, "text": ["ROP Node Configuration"], "extent": [4012, 4040], "body": [{"type": "para", "indent": 11, "text": ["For each upstream work item, the node creates a single work item that cooks the ", {"type": "ui", "text": ["ROP Path"]}, " and PDG does ", {"type": "em", "text": ["not"]}, " pass any frame range settings to the ROP node. The number of frames to cook is determined by the parameters on the ROP itself."], "extent": [4040, 4291]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "framegeneration"}}, {"type": "dt", "indent": 0, "text": ["Override Frame"], "extent": [4291, 4307], "body": [{"type": "para", "indent": 4, "text": ["When this parameter is enabled, it overrides the frame used with the ", {"type": "ui", "text": ["Single Frame"]}, " Evaluation mode."], "extent": [4331, 4439]}], "container": true, "attrs": {"id": "frameoverride"}}, {"type": "dt", "indent": 0, "text": ["Frame Range"], "extent": [4439, 4452], "body": [{"type": "para", "indent": 4, "text": ["The frame start, end and step size to use when ", {"type": "ui", "text": ["Frame Generation"]}, " is set to ", {"type": "ui", "text": ["Frame Range"]}, "."], "extent": [4468, 4568]}], "container": true, "attrs": {"id": "range"}}, {"type": "dt", "indent": 0, "text": ["All Frames in One Batch"], "extent": [4568, 4593], "body": [{"type": "para", "indent": 4, "text": ["When on, work items from the same frame range are grouped into a batch that is scheduled as a single job. This is used for simulations where each frame depends on the previous frame, and it is advantageous to keep everything in memory."], "extent": [4612, 4853]}], "container": true, "attrs": {"id": "batchall"}}, {"type": "dt", "indent": 0, "text": ["Frames per Batch"], "extent": [4853, 4871], "body": [{"type": "para", "indent": 4, "text": ["By default, when this parameter is at 1 each work item is cooked as a \n    separate job. When this parameter is set to a value greater than 1, work\n    items are grouped into batches."], "extent": [4896, 5085]}], "container": true, "attrs": {"id": "framesperbatch"}}, {"type": "dt", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [5085, 5109], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [5132, 5195]}], "container": true, "attrs": {"id": "topscheduler"}}, {"type": "dt", "indent": 0, "text": ["Add Job Parms"], "extent": [5195, 5210], "body": [{"type": "para", "indent": 4, "text": ["Opens the ", {"scheme": null, "value": "/ref/windows/edit_parameter_interface", "type": "link", "text": ["Edit Parameter Interface"], "fullpath": "/ref/windows/edit_parameter_interface"}, "  window for the purpose of adding scheduler parameters to the node\u2019s interface."], "extent": [5232, 5392]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["In-Process Scheduler"], "extent": [5392, 5418], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/TOP/scheduler.svg", "type": "link", "text": "", "fullpath": "/icons/TOP/scheduler.svg"}, " ", {"scheme": "Node", "value": "/nodes//top/inprocessscheduler", "type": "link", "text": ["In-Process Scheduler\u2019s"], "fullpath": "/nodes//top/inprocessscheduler"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [5418, 5631]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Local Scheduler"], "extent": [5631, 5652], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/TOP/scheduler.svg", "type": "link", "text": "", "fullpath": "/icons/TOP/scheduler.svg"}, " ", {"scheme": "Node", "value": "/nodes//top/localscheduler", "type": "link", "text": ["Local Scheduler\u2019s"], "fullpath": "/nodes//top/localscheduler"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [5652, 5856]}], "container": true}, {"type": "dt", "indent": 4, "text": ["HQueue Scheduler"], "extent": [5856, 5878], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/MISC/hqueue_logo.svg", "type": "link", "text": "", "fullpath": "/icons/MISC/hqueue_logo.svg"}, " ", {"scheme": "Node", "value": "/nodes//top/hqueuescheduler", "type": "link", "text": ["HQueue Scheduler\u2019s"], "fullpath": "/nodes//top/hqueuescheduler"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [5878, 6087]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "addjobparms"}}, {"type": "dt", "indent": 0, "text": ["Work Item Priority"], "extent": [6087, 6107], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [6138, 6236]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [6236, 6269], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [6269, 6400]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [6400, 6424], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [6424, 6507]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [6507, 6535], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [6535, 6640]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [6640, 6936]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}}, {"type": "dt", "indent": 0, "text": ["Priority Expression"], "extent": [6936, 6957], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [6992, 7120]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [7120, 7219]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}}, {"type": "dt", "indent": 0, "text": ["Feedback Attributes"], "extent": [7219, 7240], "body": [{"type": "para", "indent": 4, "text": ["When on, the specified attributes are copied from the end of each iteration onto the corresponding work item at the beginning of the next iteration. This occurs immediately before the starting work item for the next iteration cooks."], "extent": [7270, 7508]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [7508, 7517], "body": [{"type": "para", "indent": 11, "text": ["The attribute(s) to feedback can be specified as a space-separated list or by using the attribute pattern syntax. For more information on how to write attribute patterns, see ", {"scheme": null, "value": "/tops/attributes#pattern", "type": "link", "text": ["Attribute Pattern Syntax"], "fullpath": "/tops/attributes#pattern", "fragment": "#pattern"}, "."], "extent": [7517, 7757]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "pdg_feedbackpattern"}}, {"type": "dt", "indent": 0, "text": ["Feedback Output Files"], "extent": [7757, 7780], "body": [{"type": "para", "indent": 4, "text": ["When on, the output files from each iteration are copied onto the corresponding work item at the beginning of the next loop iteration. The files are added as outputs of that work item, which makes them available as inputs to work items inside the loop."], "extent": [7808, 8066]}], "container": true, "attrs": {"id": "pdg_feedbackfiles"}}, {"type": "dt", "indent": 0, "text": ["Work Item Label"], "extent": [8066, 8083], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [8111, 8355]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Label"], "extent": [8355, 8370], "body": [{"type": "para", "indent": 8, "text": ["The work items on this node do not have a label."], "extent": [8370, 8428]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [8428, 8461], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [8461, 8544]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [8544, 8568], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [8568, 8684]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [8684, 8709], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [8709, 8779]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}}, {"type": "dt", "indent": 0, "text": ["Label Expression"], "extent": [8779, 8797], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [8829, 9121]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}}], "container": true}]}