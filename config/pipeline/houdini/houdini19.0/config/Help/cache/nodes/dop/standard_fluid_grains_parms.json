{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Search Scale"], "extent": [16, 30], "body": [{"type": "para", "indent": 4, "text": ["Potential intersection particles are any within this scaled distance\n    of the average of the two particles ", {"type": "code", "text": ["pscale"]}, " attribute.  This\n    is an overestimate because usually collisions are not updated\n    during the constraint iterations, so it needs to record not\n    just the currently colliding particles, but those that may\n    start to collide due to the earlier iterations."], "extent": [58, 443]}, {"type": "para", "indent": 4, "text": ["This also effects the range of the attraction force in clumping."], "extent": [443, 513]}], "container": true, "attrs": {"id": "grain_searchscale"}}, {"type": "dt", "indent": 0, "text": ["Max Neighbors"], "extent": [513, 528], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of particles that will be considered when searching for potential collisions over the substep. Capping this is useful to avoid excessive computations, if too many particles are created at one spot.  This parameter is ignored if ", {"type": "ui", "text": ["OpenCL Neighbor Search"]}, " is enabled, in which\n    case all neighbors are considered within the radius determined by ", {"type": "ui", "text": ["Search Scale"]}, "."], "extent": [556, 944]}], "container": true, "attrs": {"id": "grain_maxneighbor"}}, {"type": "dt", "indent": 0, "text": ["Global Weight"], "extent": [944, 959], "body": [{"type": "para", "indent": 4, "text": ["A universal weight scale applied repulsion weight, attraction weight,\n    and the friction weight.   Because constraint averaging isn\u2019t used,\n    this may need to be reduced for stability, especially when high\n    attraction stiffness values are used.  A value of 1 / Max Neighbors\n    should provide stability, but at the cost of slower convergence."], "extent": [982, 1338]}], "container": true, "attrs": {"id": "grain_weight"}}, {"type": "dt", "indent": 0, "text": ["Assume Uniform Radius"], "extent": [1338, 1361], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "code", "text": ["pscale"]}, " attribute is used to determine the radius of each\n    particle.  If all particles have the same radius, faster acceleration\n    structures can be used to find neighbors."], "extent": [1391, 1579]}], "container": true, "attrs": {"id": "grain_uniformradius"}}, {"type": "dt", "indent": 0, "text": ["Ignore Neighbors in Same Piece"], "extent": [1579, 1611], "body": [{"type": "para", "indent": 4, "text": ["Ignore any neighbors that have the same non-negative value for the ", {"type": "code", "text": ["piece"]}, " point attribute.\n    This option can be enabled to create separate clusters of grains that only interact\n    with other clusters, often in conjunction with a ", {"type": "ui", "text": ["Shape Match"]}, " constraint to give\n    rigid behavior.  The ", {"scheme": "Node", "value": "/nodes/sop/vdbtospheres", "type": "link", "text": ["VDB To Spheres"], "fullpath": "/nodes/sop/vdbtospheres"}, " SOP can be a good method\n    for filling objects with overlapping grains."], "extent": [1633, 2044]}], "container": true, "attrs": {"id": "ignorepiece"}}, {"type": "dt", "indent": 0, "text": ["Enable Constraint Averaging"], "extent": [2044, 2073], "body": [{"type": "para", "indent": 4, "text": ["When multiple particles collide at the same time, this will average\n    out all the constraints.  This is effective in ensuring stability, but does\n    not preserver momentum.  Thus, when combined with internal forces, such as\n    clumping, bunches of particles may accelerate under their own force."], "extent": [2105, 2410]}], "container": true, "attrs": {"id": "doconstraintaveraging"}}, {"type": "dt", "indent": 0, "text": ["Repulsion Weight"], "extent": [2410, 2428], "body": [{"type": "para", "indent": 4, "text": ["A weighting for how much the particle collision forces are weighted.\n    A value of zero will disable particle collision."], "extent": [2454, 2581]}, {"type": "para", "indent": 4, "text": ["Scale with the ", {"type": "code", "text": ["repulsionweight"]}, " point attribute."], "extent": [2581, 2636]}], "container": true, "attrs": {"id": "repulsionweight"}}, {"type": "dt", "indent": 0, "text": ["Repulsion"], "extent": [2636, 2647], "body": [{"type": "para", "indent": 4, "text": ["How strongly particles are kept apart.  Higher values result in\n    less bouncy repulsion."], "extent": [2676, 2772]}], "container": true, "attrs": {"id": "repulsionstiffness"}}, {"type": "dt", "indent": 0, "text": ["Attraction Weight"], "extent": [2772, 2791], "body": [{"type": "para", "indent": 4, "text": ["A weighting for how much the particles will naturally stick together\n    when close.  A value of zero will disable particle clumping."], "extent": [2818, 2957]}, {"type": "para", "indent": 4, "text": ["Scale with the ", {"type": "code", "text": ["attractionweight"]}, " point attribute."], "extent": [2957, 3013]}], "container": true, "attrs": {"id": "attractionweight"}}, {"type": "dt", "indent": 0, "text": ["Attraction"], "extent": [3013, 3025], "body": [{"type": "para", "indent": 4, "text": ["How strongly nearby particles stick to each other.  Higher values\n    result in a less bouncy adhesion."], "extent": [3055, 3164]}], "container": true, "attrs": {"id": "attractionstiffness"}}, {"type": "dt", "indent": 0, "text": ["Enable Mass Shock"], "extent": [3164, 3183], "body": [{"type": "para", "indent": 4, "text": ["Artificially scales the mass of particles according to their position\n    with respect to gravity.  By making particles higher up lighter,\n    stacks of particles will converge faster and be more stable."], "extent": [3205, 3414]}], "container": true, "attrs": {"id": "domassshock"}}, {"type": "dt", "indent": 0, "text": ["Shock Scaling Power"], "extent": [3414, 3435], "body": [{"type": "para", "indent": 4, "text": ["The amount of scaling to perform.  Higher numbers increase the\n    contrast between successive particles.  A value of 0 will\n    cause no ratio between particles, a value of 1 a 15% ratio\n    between two particles stacked vertically."], "extent": [3460, 3699]}, {"type": "para", "indent": 4, "text": ["Too high a number makes higher particles extremely light\n    and destabilizes the system."], "extent": [3699, 3794]}], "container": true, "attrs": {"id": "massshockpower"}}, {"type": "dt", "indent": 0, "text": ["Shock Axis"], "extent": [3794, 3806], "body": [{"type": "para", "indent": 4, "text": ["The up-vector used to define a gradient of particle masses."], "extent": [3830, 3895]}, {"type": "para", "indent": 4, "text": ["Should be in the direction of stacking, so usually is\n    opposite to that of gravity."], "extent": [3895, 3987]}], "container": true, "attrs": {"id": "massshockaxis"}}, {"type": "dt", "indent": 0, "text": ["Kernel Radius Scale"], "extent": [3987, 4008], "body": [{"type": "para", "indent": 4, "text": ["The radius of the kernel used for fluid calculations.  In general the default value\n    of 4 is recommended, but it can be increased or reduced slightly for different effects.\n    In particular this value can effect the size of the drops created by surface tension, with\n    larger values creating larger drops and fewer individual particles. Note that larger values\n    will result in slower simulation and more memory usage for neighbor lists.  Also values\n    much below 3 or above 5 can lead to instability."], "extent": [4036, 4553]}], "container": true, "attrs": {"id": "fluid_searchscale"}}, {"type": "dt", "indent": 0, "text": ["Viscosity"], "extent": [4553, 4564], "body": [{"type": "para", "indent": 4, "text": ["The viscosity of the fluid.  Low values for viscosity help keep the simulation stable,\n    while higher values can simulate liquids like honey.  A per-particle ", {"type": "code", "text": ["viscosity"]}, " attribute\n    can be used to multiply this value for variable viscosity.  Fluid particles will different\n    ", {"type": "code", "text": ["phase"]}, " values will be solved independently for viscosity, allowing multi-phase fluid\n    behavior."], "extent": [4584, 4970]}], "container": true, "attrs": {"id": "viscosity"}}, {"type": "dt", "indent": 0, "text": ["SDF Collision Viscosity"], "extent": [4970, 4995], "body": [{"type": "para", "indent": 4, "text": ["The viscosity of the fluid in contact with an SDF collision. This value is currently only\n    used when ", {"type": "ui", "text": ["Enable Minimal Solver"]}, " is enabled and the solver has a ground plane or\n    SDF collision object."], "extent": [5024, 5233]}], "container": true, "attrs": {"id": "collisionviscosity"}}, {"type": "dt", "indent": 0, "text": ["Viscosity Solver"], "extent": [5233, 5251], "body": [{"type": "para", "indent": 4, "text": ["The type of viscosity solve to perform.  ", {"type": "ui", "text": ["Explicit"]}, " is fast but can be unstable for high particle\n    counts, high viscosity, or low substeps.  ", {"type": "ui", "text": ["Implicit"]}, " is slower but remains stable even for higher\n    particle counts and viscosity values."], "extent": [5277, 5528]}], "container": true, "attrs": {"id": "viscositysolver"}}, {"type": "dt", "indent": 0, "text": ["Viscosity Tolerance"], "extent": [5528, 5549], "body": [{"type": "para", "indent": 4, "text": ["The tolerance for the viscosity solve when using the ", {"type": "ui", "text": ["Implicit"]}, " solve.  Lower values are more accurate \n    at the cost of more iterations."], "extent": [5563, 5710]}], "container": true, "attrs": {"id": "tol"}}, {"type": "dt", "indent": 0, "text": ["Max Viscosity Iterations"], "extent": [5710, 5736], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of iterations for the ", {"type": "ui", "text": ["Implicit"]}, " viscosity solve."], "extent": [5769, 5845]}], "container": true, "attrs": {"id": "maxviscosityiterations"}}, {"type": "dt", "indent": 0, "text": ["Surface Tension"], "extent": [5845, 5862], "body": [{"type": "para", "indent": 4, "text": ["The surface tension of the fluid.  Higher values for this setting reduce the curvature of the fluid\n    and cause it to form blobs.  A per-particle ", {"type": "code", "text": ["surfacetension"]}, " attribute\n    can be used to multiply this value for variable surface tension.  Fluid particles will different\n    ", {"type": "code", "text": ["phase"]}, " values will be solved independently for surface tension, allowing multi-phase fluid\n    behavior."], "extent": [5887, 6278]}], "container": true, "attrs": {"id": "surfacetension"}}, {"type": "dt", "indent": 0, "text": ["Spatial Sort Interval"], "extent": [6278, 6301], "body": [{"type": "para", "indent": 4, "text": ["Vellum fluids and grains perform many calculations involving nearby points.  Generally performance\n    is greatly improved by ensuring that points that are near other in 3D space are also near each other in\n    memory.  This option enables a spatial sort of the particles at the specified interval of frames."], "extent": [6323, 6641]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6641, 6651], "body": [{"type": "para", "indent": 8, "text": ["This sort will change the point numbers of the particles, so it can be useful to add an ", {"type": "code", "text": ["id"]}, " attribute before simulation."], "extent": [6651, 6782]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "sortinterval"}}], "container": true}]}