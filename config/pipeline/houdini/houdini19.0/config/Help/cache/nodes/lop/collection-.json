{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "collection", "icon": "LOP/collection", "since": "17.0", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Collection"], "extent": [0, 15]}, {"type": "summary", "indent": 0, "text": ["Creates/edits a collection using selected prims."], "extent": [99, 156]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [156, 167], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["USD collections can specify their contents with a combination of ", {"type": "q", "text": ["includes"]}, " and ", {"type": "q", "text": ["excludes"]}, ". The contents of the collection is the prims that match the includes and don\u2019t match any excludes. This lets you sometimes write a broad ", {"type": "q", "text": ["include"]}, ", and then ", {"type": "q", "text": ["carve out"]}, " the prims you don\u2019t want with ", {"type": "q", "text": ["excludes"]}, "."], "extent": [167, 473], "body": [{"type": "para", "indent": 4, "text": ["By default, this node does not show UI for exclude rules. Turn on ", {"type": "ui", "text": ["Add excludes"]}, " to show another multi-parm for creating exclude rules."], "extent": [473, 616]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node can match prims to include/exclude using a variety of methods. See the ", {"type": "ui", "text": ["Target method"]}, " parameter."], "extent": [616, 729]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The multi-parm instances are combined by ", {"type": "strong", "text": ["union"]}, ", so a primitive that matches any of the conditions is put in the set (whether for inclusion or exclusion)."], "extent": [729, 888]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["In VEX snippets, you can use ", {"type": "code", "text": ["@"]}, " variable names containing colons (", {"type": "code", "text": [":"]}, "). This makes it easier to automatically bind certain USD attribute names (for example ", {"type": "code", "text": ["i@primvars:foo"]}, "). (These names are not normally legal in names in VEX source code. The node automatically encodes these kinds of names when used in a snippet.)"], "extent": [16, 336]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [915, 927], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Primitive Path"], "extent": [927, 944], "body": [{"type": "para", "indent": 4, "text": ["The primitive to author the collection attribute on."], "extent": [944, 1002]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collection Name"], "extent": [1002, 1019], "body": [{"type": "para", "indent": 4, "text": ["The name of the collection to create/edit."], "extent": [1019, 1067]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Icon"], "extent": [1067, 1073], "body": [{"type": "para", "indent": 8, "text": ["A path to an icon or image file that should be associated with the collection in the Scene Graph Tree\u2019s collections panel. This icon path is stored in a the custom data dictionary of the collection\u2019s include relationship."], "extent": [1073, 1304]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Expansion Rule"], "extent": [1304, 1320], "body": [{"type": "para", "indent": 4, "text": ["Whether to include descendants of selected prims in the collection."], "extent": [1320, 1393]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Expansion"], "extent": [1393, 1411], "body": [{"type": "para", "indent": 8, "text": ["Only paths in the includes (and not in the excludes) belong to the collection. (", {"type": "code", "text": ["explicitOnly"]}, ")"], "extent": [1411, 1516]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Expand Primitives"], "extent": [1516, 1539], "body": [{"type": "para", "indent": 8, "text": ["All the prims at or below the includes (and not under the excludes) belong to the collection. (", {"type": "code", "text": ["expandPrims"]}, ")"], "extent": [1539, 1658]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Expand Primitives and Properties"], "extent": [1658, 1696], "body": [{"type": "para", "indent": 8, "text": ["Like ", {"type": "q", "text": ["Expand Primitives"]}, ", but also includes all properties on all matched prims."], "extent": [1696, 1786]}, {"type": "para", "indent": 8, "text": ["According to the Pixar documentation: ", {"type": "q", "text": ["We're still not quite sure what the use cases are for this, but you can use it to capture a whole lot of UsdObjects very concisely."]}, "\""], "extent": [1786, 1968]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Primitive If Required"], "extent": [1968, 1998], "body": [{"type": "para", "indent": 4, "text": ["If the primitive at ", {"type": "ui", "text": ["Primitive path"]}, " doesn\u2019t exist, the node will create it. (The node creates a node with no defined Type.)"], "extent": [1998, 2130]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Instance Proxies in Collection"], "extent": [2130, 2168], "body": [{"type": "para", "indent": 4, "text": ["Instance proxies are prims under ", {"scheme": null, "value": "/solaris/usd#instancing", "type": "link", "text": ["instanceable primitives"], "fullpath": "/solaris/usd#instancing", "fragment": "#instancing"}, ". Since they are inside instances, they are not editable, so it ", {"type": "em", "text": ["usually"]}, " doesn\u2019t make sense to add them to collections."], "extent": [2168, 2376]}, {"type": "para", "indent": 4, "text": ["However in some cases, such as material binding, it is possible to refer to instance proxy prims. In those limited cases, it may be useful to be able to put instance proxy prims in collections. (Per-instance material bindings are not currently supported by the rendering framework, but they will be at some point.)"], "extent": [2376, 2696]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Rules"], "extent": [2696, 2710], "body": [{"type": "para", "indent": 4, "text": ["You can specify multiple rules for what prims to ", {"type": "strong", "text": ["include"]}, ". Set the number of include rules, or click the plus and minus buttons to add or remove rules."], "extent": [2730, 2888]}], "container": true, "attrs": {"id": "num_rules"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Method"], "extent": [2888, 2903], "body": [{"type": "para", "indent": 4, "text": ["How to select prims matched by this rule."], "extent": [2930, 2977]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Primitive Pattern"], "extent": [2977, 3000], "body": [{"type": "para", "indent": 8, "text": ["Match prims using ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["primitive pattern syntax"], "fullpath": "/solaris/pattern"}, "."], "extent": [3000, 3072]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Box"], "extent": [3072, 3090], "body": [{"type": "para", "indent": 8, "text": ["Match prims based on whether they are inside or intersect a bounding box."], "extent": [3090, 3173]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primitive Type"], "extent": [3173, 3193], "body": [{"type": "para", "indent": 8, "text": ["Match prims of a certain type."], "extent": [3193, 3233]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primitive Kind"], "extent": [3233, 3253], "body": [{"type": "para", "indent": 8, "text": ["Match prims with a certain ", {"scheme": null, "value": "/solaris/usd#kinds", "type": "link", "text": ["kind"], "fullpath": "/solaris/usd#kinds", "fragment": "#kinds"}, "."], "extent": [3253, 3316]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primitive Purpose"], "extent": [3316, 3339], "body": [{"type": "para", "indent": 8, "text": ["Match prims with a certain ", {"scheme": null, "value": "/solaris/usd#purpose", "type": "link", "text": ["render purpose"], "fullpath": "/solaris/usd#purpose", "fragment": "#purpose"}, "."], "extent": [3339, 3414]}], "container": true}, {"type": "dt", "indent": 4, "text": ["VEXpression"], "extent": [3414, 3431], "body": [{"type": "para", "indent": 8, "text": ["Evaluate a VEX snippet for every prim in the scene graph tree, and select prims where the VEX evaluates to a non-zero value."], "extent": [3431, 3565]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "targetmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Exclusions"], "extent": [3565, 3581], "body": [{"type": "para", "indent": 4, "text": ["Show another multi-parm for creating exclusion rules. Prims that match the exclude rules are subtracted from the list of prims that match the include rules to get the final collection contents. "], "extent": [3581, 3781]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exclude Rules"], "extent": [3781, 3796], "body": [{"type": "para", "indent": 4, "text": ["You can specify multiple rules for what prims to ", {"type": "strong", "text": ["exclude"]}, ". Set the number of exclude rules, or click the plus and minus buttons to add or remove rules."], "extent": [3796, 3953]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Collection"], "summary": ["Creates/edits a collection using selected prims."], "included": ["/nodes/lop/_snippet_token"]}