{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "heightfield_maskbyconcavity", "icon": "SOP/heightfield_maskbyconcavity", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["HeightField Mask by Concavity"], "extent": [0, 34]}, {"type": "summary", "indent": 0, "text": ["Creates a mask where the input terrain is hollow/depressed, for example riverbeds and valleys."], "extent": [149, 251]}, {"type": "para", "indent": 0, "text": ["The node measures concavity as ", {"type": "q", "text": ["how much sky is visible from the given point?"]}, " It sends rays from each point in different directions and measures how many hit terrain before reaching their maximum distance."], "extent": [251, 459]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/nodes/sop/heightfield_concavity,png", "type": "link", "text": "", "fullpath": "/images/nodes/sop/heightfield_concavity,png"}], "extent": [459, 512]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [512, 524], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Masking"], "extent": [524, 539], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Combine with Existing"], "extent": [460, 483], "body": [{"type": "para", "indent": 4, "text": ["How to combine this mask with any existing mask in the input."], "extent": [505, 576]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Replace"], "extent": [576, 589], "body": [{"type": "para", "indent": 8, "text": ["Clear the existing mask and replace it with the new mask."], "extent": [589, 664]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add"], "extent": [664, 673], "body": [{"type": "para", "indent": 8, "text": ["Add the values in this mask to any existing mask."], "extent": [673, 740]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subtract"], "extent": [740, 754], "body": [{"type": "para", "indent": 8, "text": ["Subtract the values in this mask from any existing mask."], "extent": [754, 828]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Difference"], "extent": [828, 844], "body": [{"type": "para", "indent": 8, "text": ["Set the mask values to the difference between the old mask and this mask."], "extent": [844, 927]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiply"], "extent": [927, 941], "body": [{"type": "para", "indent": 8, "text": ["Multiply the values of the old mask by the values in this mask. This might be useful to ", {"type": "q", "text": ["scale"]}, " existing values while leaving empty areas alone."], "extent": [941, 1095]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum"], "extent": [1095, 1108], "body": [{"type": "para", "indent": 8, "text": ["Set the mask values to the maximum of the old mask and this mask."], "extent": [1108, 1191]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum"], "extent": [1191, 1204], "body": [{"type": "para", "indent": 8, "text": ["Set the mask values to the minimum of the old mask and this mask."], "extent": [1204, 1287]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Blend"], "extent": [1287, 1298], "body": [{"type": "para", "indent": 8, "text": ["Blend the old mask and this mask by a certain amount."], "extent": [1298, 1361]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "combine"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [1361, 1368], "body": [{"type": "para", "indent": 4, "text": ["The amount to blend the old mask with what you draw, when ", {"type": "ui", "text": ["Combine with existing"]}, " is ", {"type": "q", "text": ["blend"]}, ". A value of ", {"type": "code", "text": ["0"]}, " leaves the existing mask, a value of ", {"type": "code", "text": ["1"]}, " replaces with the new mask, a value of ", {"type": "code", "text": ["0.5"]}, " blends equally between the old and new mask."], "extent": [1388, 1636]}], "container": true, "attrs": {"id": "blend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Concavity"], "extent": [624, 643], "body": [{"type": "para", "indent": 4, "text": ["Areas with concavity equal to or greater than this value are added to the mask."], "extent": [669, 754]}], "container": true, "attrs": {"id": "minexposure"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Maximum Concavity:  Maximum concavity to mask."], "extent": [754, 801], "body": [{"type": "para", "indent": 4, "text": ["Areas with concavity less than or equal to this value are added to the mask."], "extent": [827, 913]}], "container": true, "attrs": {"id": "maxexposure"}}, {"type": "para", "indent": 0, "text": ["Invert Mask: Invert Mask."], "extent": [913, 939], "body": [{"type": "para", "indent": 4, "text": ["Invert the mask, so values ", {"type": "em", "text": ["outside"]}, " the concavity range are added to the mask instead."], "extent": [964, 1058]}], "container": true, "attrs": {"id": "invertmask"}}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Quality"], "extent": [1058, 1074], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["View Distance"], "extent": [1074, 1090], "body": [{"type": "para", "indent": 4, "text": ["How far to send rays to determine if a point can see the sky. Longer distances give more accurate measurements, but can be slower."], "extent": [1117, 1257]}], "container": true, "attrs": {"id": "viewdistance"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Step Scale"], "extent": [1257, 1269], "body": [{"type": "para", "indent": 4, "text": ["How finely to step along the rays to determine if a point can see the sky. Larger values are faster but might miss thin features."], "extent": [1293, 1432]}], "container": true, "attrs": {"id": "stepscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Searches"], "extent": [1432, 1452], "body": [{"type": "para", "indent": 4, "text": ["How many rays to send to determine if a point can see the sky. Larger numbers give more accurate measurements, but can be slower."], "extent": [1478, 1618]}], "container": true, "attrs": {"id": "numsearches"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Layer Bindings"], "extent": [1618, 1639], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mask Layer"], "extent": [125, 137], "body": [{"type": "para", "indent": 4, "text": ["If a mask volume is wired into this node\u2019s second input, this specifies which volume in the second input to use to mask this node\u2019s effect, usually ", {"type": "code", "text": ["mask"]}, ". Click the ", {"type": "q", "text": ["Add mask paint"]}, " button to paint the mask directly in the viewport (this automatically adds a paint node to the second input)."], "extent": [161, 460]}], "container": true, "attrs": {"id": "masklayer"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Height Layer"], "extent": [16, 30], "body": [{"type": "para", "indent": 4, "text": ["The name of the height volume to operate on, usually ", {"type": "code", "text": ["height"]}, "."], "extent": [56, 125]}], "container": true, "attrs": {"id": "heightlayer"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["HeightField Mask by Concavity"], "summary": ["Creates a mask where the input terrain is hollow/depressed, for example riverbeds and valleys."], "included": ["/nodes/sop/_heightfield_common"]}