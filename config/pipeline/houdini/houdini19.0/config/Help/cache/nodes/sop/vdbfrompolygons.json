{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "vdbfrompolygons", "icon": "SOP/vdbfrompolygons", "since": "12.5", "verb_since": "16.5", "tags": "create, model", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["VDB from Polygons"], "extent": [134, 156]}, {"type": "summary", "indent": 0, "text": ["Converts polygonal surfaces and/or surface attributes into VDB volume primitives."], "extent": [156, 246]}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "/model/volumes", "type": "link", "text": ["volumes"], "fullpath": "/model/volumes"}, " for an explanation of standard volumes and OpenVDB volumes."], "extent": [16, 105]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [270, 276], "body": [{"type": "para", "indent": 4, "text": ["The input geometry must be a quad or triangle mesh.\n    This node will ", {"type": "q", "text": ["convex"]}, " the input surface into such a mesh if it isn\u2019t."], "extent": [276, 409]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["This node can create a distance field (signed (SDF) or unsigned) and/or a density (fog) field."], "extent": [409, 505]}, {"type": "para", "indent": 0, "text": ["When you create a fog field you can choose to fill the band of voxels on the surface or (if you have an airtight surface) fill the surface (see the ", {"type": "ui", "text": ["Fill interior"]}, " parameter)."], "extent": [505, 684]}, {"type": "para", "indent": 0, "text": ["Since VDB primitives only store the voxels around the surface, they can have a much a higher effective resolution than creating a traditional volume with ", {"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": ["IsoOffset"], "fullpath": "/nodes/sop/isooffset"}, "."], "extent": [684, 871]}, {"type": "para", "indent": 0, "text": ["You can connect a VDB to the second input to automatically use that VDB\u2019s orientation and voxel size (see the ", {"type": "ui", "text": ["Reference VDB"]}, " parameter)."], "extent": [871, 1012]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1012, 1024], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Voxel Size"], "extent": [1024, 1037], "body": [{"type": "para", "indent": 4, "text": ["The size of voxels in the output VDB volume.\n    Surface features smaller than this will not be in the output VDB."], "extent": [1057, 1181]}], "container": true, "attrs": {"id": "voxelsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reference VDB"], "extent": [1181, 1196], "body": [{"type": "para", "indent": 4, "text": ["If the second input is connected, you can enter the name of a VDB primitive in the second input to copy the orientation and voxel size from it."], "extent": [1216, 1369]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": null, "value": "/model/volumes#group", "type": "link", "text": ["specifying volumes"], "fullpath": "/model/volumes#group", "fragment": "#group"}, "."], "extent": [1369, 1421]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distance VDB"], "extent": [1421, 1435], "body": [{"type": "para", "indent": 4, "text": ["Creates a signed distance field (SDF).\n    An SDF stores the distance to the surface in each voxel.\n    (If the voxel is inside, the distance is negative.)"], "extent": [1435, 1596]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fog VDB"], "extent": [1596, 1605], "body": [{"type": "para", "indent": 4, "text": ["Creates a density field.\n    Voxels in the band on the surface store ", {"type": "code", "text": ["1"]}, " and voxels outside store ", {"type": "code", "text": ["0"]}, ".\n    The size of the filled band is controlled with the ", {"type": "ui", "text": ["Interior Band Voxels"]}, "."], "extent": [1605, 1798]}, {"type": "para", "indent": 4, "text": ["Turn on ", {"type": "ui", "text": ["Fill interior"]}, " to create a solid VDB from an airtight surface instead of a narrow band."], "extent": [1798, 1906]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Surface Attributes"], "extent": [1906, 1926], "body": [{"type": "para", "indent": 4, "text": ["You can generate additional VDB primitives that store the values of primitive (face), point, or vertex ", {"scheme": null, "value": "/model/attributes", "type": "link", "text": ["attributes"], "fullpath": "/model/attributes"}, ".\n    Only voxels in the band around the surface will be set."], "extent": [1926, 2126]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute"], "extent": [2126, 2137], "body": [{"type": "para", "indent": 4, "text": ["The name of point, vertex, or primitive attribute to create a VDB from."], "extent": [2137, 2218]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["VDB Name"], "extent": [2218, 2228], "body": [{"type": "para", "indent": 4, "text": ["A new name for the generated VDB primitive storing the attribute values.\n    Leave this blank to use the attribute name."], "extent": [2259, 2385]}], "container": true, "attrs": {"id": "attributevdbname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector Type"], "extent": [2385, 2398], "body": [{"type": "para", "indent": 4, "text": ["How vector values should be interpreted."], "extent": [2420, 2466]}], "container": true, "attrs": {"id": "vectype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use World Space for Band"], "extent": [2466, 2492], "body": [{"type": "para", "indent": 4, "text": ["Sets whether ", {"type": "ui", "text": ["Exterior band"]}, " and ", {"type": "ui", "text": ["Interior band"]}, " are specified in Houdini units.\n    When this option is off, the band width parameters are in voxels."], "extent": [2492, 2652]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exterior Band Voxels"], "extent": [2652, 2674], "body": [{"type": "para", "indent": 4, "text": ["How many voxels outside the surface to fill in the generated VDB (when ", {"type": "ui", "text": ["Use world space for band"]}, " is off)."], "extent": [2674, 2788]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exterior Band"], "extent": [2788, 2803], "body": [{"type": "para", "indent": 4, "text": ["How many Houdini units outside the surface to fill in the generated VDB (when ", {"type": "ui", "text": ["Use world space for band"]}, " is on)."], "extent": [2803, 2923]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Band Voxels"], "extent": [2923, 2945], "body": [{"type": "para", "indent": 4, "text": ["How many voxels inside the surface to fill in the generated VDB (when ", {"type": "ui", "text": ["Use world space for band"]}, " is off)."], "extent": [2945, 3058]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Band"], "extent": [3058, 3073], "body": [{"type": "para", "indent": 4, "text": ["The distance to compute the distance field inside the mesh."], "extent": [3073, 3138]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fill Interior"], "extent": [3138, 3153], "body": [{"type": "para", "indent": 4, "text": ["In SDF mode, Fill Interior extends the signed value all the way to the middle of the volume. In Fog mode, a gradient is applied from 0 at the surface (0 values of the SDF) to 1 at the innermost distance of the SDF Field (the most negative SDF values)."], "extent": [3153, 3410]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unsigned Distance Field"], "extent": [3410, 3435], "body": [{"type": "para", "indent": 4, "text": ["When creating a ", {"type": "ui", "text": ["Distance VDB"]}, ", simply store the distance from the voxel to the surface (no negative values).\n    This avoids trying to figure out inside and outside, so the surface doesn\u2019t need to be airtight."], "extent": [3435, 3653]}, {"type": "para", "indent": 4, "text": ["This is similar to the Minimum function of the ", {"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": ["Iso Offset SOP"], "fullpath": "/nodes/sop/isooffset"}, "."], "extent": [3653, 3742]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3742, 3750], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Polygonal mesh to convert"], "extent": [3750, 3778], "body": [{"type": "para", "indent": 4, "text": ["The polygonal surface to convert."], "extent": [3778, 3817]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Optional reference VDB"], "extent": [3817, 3841], "body": [{"type": "para", "indent": 4, "text": ["If connected, this node copies the orientation and voxel size from a VDB primitive in this input."], "extent": [3841, 3944]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3944, 3953], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vdb", "type": "link", "text": "", "fullpath": "/nodes/sop/vdb"}], "extent": [3953, 3971]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vdbfromparticles", "type": "link", "text": "", "fullpath": "/nodes/sop/vdbfromparticles"}], "extent": [3971, 4001]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": "", "fullpath": "/nodes/sop/isooffset"}], "extent": [4001, 4025]}], "container": true}], "text": "Related"}], "title": ["VDB from Polygons"], "summary": ["Converts polygonal surfaces and/or surface attributes into VDB volume primitives."], "included": ["/nodes/sop/volume_types"]}