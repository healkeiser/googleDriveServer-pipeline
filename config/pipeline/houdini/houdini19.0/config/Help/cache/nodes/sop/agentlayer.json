{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "agentlayer", "icon": "CROWDS/agentlayer", "version": "2.0", "since": "19.0", "verb_since": "19.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Agent Layer"], "extent": [119, 135]}, {"type": "summary", "indent": 0, "text": ["Adds new shapes and layers to an agent primitive."], "extent": [135, 193]}, {"type": "para", "indent": 0, "text": ["This node adds new shapes and layers to the ", {"scheme": null, "value": "/crowds/agents#agentdefinition", "type": "link", "text": ["agent definition"], "fullpath": "/crowds/agents#agentdefinition", "fragment": "#agentdefinition"}, ".\nA layer contains one or more ", {"type": "em", "text": ["shape bindings"]}, ", which reference a shape from the agent\u2019s ", {"type": "em", "text": ["shape library"]}, " and specify the deformer that should be used (or the joint to attach a static shape to).\nAfter populating the crowd, multiple layers can be assigned to each agent to ", {"scheme": null, "value": "/crowds/diversity#layers", "type": "link", "text": ["create geometry variations"], "fullpath": "/crowds/diversity#layers", "fragment": "#layers"}, "."], "extent": [193, 614]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [614, 626], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [626, 634], "body": [{"type": "para", "indent": 4, "text": ["The agents to be modified."], "extent": [634, 666]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Shapes"], "extent": [666, 679], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Shapes by Name"], "extent": [679, 700], "body": [{"type": "para", "indent": 4, "text": ["Adds new shapes to the shape library from the second input\u2019s geometry.\n    For every unique value of the ", {"type": "ui", "text": ["Shape Name Attribute"]}, ", a shape will be added to the shape library using the primitives that have that attribute value."], "extent": [719, 951]}, {"type": "para", "indent": 4, "text": ["If the shape is added to a layer and the ", {"type": "code", "text": ["boneCapture"]}, " point attribute is present, the shape binding will use the ", {"type": "code", "text": ["linearskinning"]}, " deformer by default.\n    However, if the shape geometry consists of a single packed primitive and its point is weighted to a single joint (i.e. describing a rigid deformation), this will be translated into a static shape binding."], "extent": [951, 1317]}], "container": true, "attrs": {"id": "addshapes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Name Attribute"], "extent": [1317, 1339], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Add Shapes by Name"]}, " is enabled, specifies the primitive string attribute used to identify primitives belonging to each shape in the second input\u2019s geometry."], "extent": [1364, 1534]}], "container": true, "attrs": {"id": "shapenameattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep External References"], "extent": [1534, 1560], "body": [{"type": "para", "indent": 4, "text": ["When new shapes are being added to the shape library, a copy will first be made so that the modifications do not affect other agents that reference the original shape library (such as those in the input SOP\u2019s geometry).\n    If this option is enabled and the original shape library referenced a file on disk, the new shape library will be marked as ", {"type": "em", "text": ["including"]}, " the original shape library.\n    In this situation, when the agent is saved to a geometry file, the path to the original shape library is saved out along with any new shapes that were not included from the original library.\n    Otherwise, the entire shape library will be saved to the geometry file and the original shape library file is not referenced."], "extent": [1585, 2303]}], "container": true, "attrs": {"id": "keepexternalref"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bounds Scale"], "extent": [2303, 2317], "body": [{"type": "para", "indent": 4, "text": ["Specifies a multiplier for the size of the shape\u2019s bounding box when computing the layer\u2019s bounds.\n    See the ", {"scheme": null, "value": "/crowds/agents#boundingbox", "type": "link", "text": ["Agent Primitive help page"], "fullpath": "/crowds/agents#boundingbox", "fragment": "#boundingbox"}, " for more information on how an agent\u2019s bounding box is computed."], "extent": [2338, 2574]}], "container": true, "attrs": {"id": "boundsscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bounds Scale Mode"], "extent": [2574, 2593], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the bounds scale is determined for each shape binding."], "extent": [2620, 2694]}], "container": true, "attrs": {"id": "shapedeformermode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bounds Scale Attribute"], "extent": [2694, 2718], "body": [{"type": "para", "indent": 4, "text": ["Overrides or multiplies the ", {"type": "ui", "text": ["Bounds Scale"]}, " with the value of a primitive attribute on the shape geometry.\n    This can be used to specify a per-shape bounds scale when importing multiple shapes."], "extent": [2745, 2947]}], "container": true, "attrs": {"id": "boundsscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Deformer"], "extent": [2947, 2963], "body": [{"type": "para", "indent": 4, "text": ["Overrides the binding\u2019s shape deformer using this ", {"scheme": null, "value": "/crowds/agents#deformer", "type": "link", "text": ["deformer name"], "fullpath": "/crowds/agents#deformer", "fragment": "#deformer"}, "."], "extent": [2963, 3059]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Deformer Mode"], "extent": [3059, 3080], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the shape deformer is determined for each shape binding."], "extent": [3107, 3183]}], "container": true, "attrs": {"id": "shapedeformermode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Deformer Attribute"], "extent": [3183, 3209], "body": [{"type": "para", "indent": 4, "text": ["Overrides the binding\u2019s shape deformer using the ", {"scheme": null, "value": "/crowds/agents#deformer", "type": "link", "text": ["deformer name"], "fullpath": "/crowds/agents#deformer", "fragment": "#deformer"}, " specified by this string primitive attribute on the shape geometry."], "extent": [3238, 3400]}], "container": true, "attrs": {"id": "shapedeformerattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Name"], "extent": [3400, 3416], "body": [{"type": "para", "indent": 4, "text": ["Specifies which transform in the rig to attach the shape to.\n    This is typically only used for binding rigid shapes."], "extent": [3416, 3540]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Name Mode"], "extent": [3540, 3561], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the transform name is determined for each shape binding."], "extent": [3588, 3664]}], "container": true, "attrs": {"id": "transformnamemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Name Attribute"], "extent": [3664, 3690], "body": [{"type": "para", "indent": 4, "text": ["Overrides the transform in the agent\u2019s rig that the shape will be attached to, using the value of a primitive attribute on the shape geometry."], "extent": [3719, 3867]}], "container": true, "attrs": {"id": "transformnameattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Layers"], "extent": [3867, 3880], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Set Current Layers"], "extent": [3880, 3901], "body": [{"type": "para", "indent": 4, "text": ["If enabled, specifies which new layers should be displayed. This is done by modifying the agents' ", {"scheme": null, "value": "/crowds/agents#currentlayers", "type": "link", "text": ["current layers"], "fullpath": "/crowds/agents#currentlayers", "fragment": "#currentlayers"}, "."], "extent": [3901, 4051]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Layer Name Attribute"], "extent": [4051, 4073], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Add Shapes by Name"]}, " is enabled, this primitive string attribute (on the second input\u2019s geometry) is used to specify which layer the shape should be added to.\n    This can be useful for procedurally partitioning the new shapes into layers.\n    For example, if the ", {"type": "ui", "text": ["Layer Name Attribute"]}, " is the same as the ", {"type": "ui", "text": ["Shape Name Attribute"]}, ", a separate layer will be created for each individual shape."], "extent": [4073, 4479]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Layers"], "extent": [4479, 4497], "body": [{"type": "para", "indent": 4, "text": ["Specifies the number of layers to create.\n    When ", {"type": "ui", "text": ["Use Layer Name Attribute"]}, " is enabled, these layers are merged with the layers specified by the ", {"type": "ui", "text": ["Layer Name Attribute"]}, "."], "extent": [4497, 4677]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [4677, 4685], "body": [{"type": "para", "indent": 4, "text": ["Toggles whether the layer is created."], "extent": [4707, 4750]}], "container": true, "attrs": {"id": "enablelayer#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Layer Name"], "extent": [4750, 4762], "body": [{"type": "para", "indent": 4, "text": ["Specifies the name of the new layer."], "extent": [4762, 4804]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shapes"], "extent": [4804, 4812], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Add Shapes by Name"]}, " is enabled, specifies which new shapes should be added to this layer.\n    The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match"}, " VEX function."], "extent": [4812, 4994]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solo Layer"], "extent": [4994, 5006], "body": [{"type": "para", "indent": 4, "text": ["When enabled, only this layer will be displayed (overriding the ", {"type": "ui", "text": ["Set Current Layers"]}, " parameter).\n    This can be useful to quickly visualize the shapes in a specific layer."], "extent": [5006, 5186]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Layer"], "extent": [5186, 5200], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Copy Source Layer"]}, " is enabled, specifies the name of an existing layer to copy shape bindings from."], "extent": [5200, 5311]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Filter by Transform"], "extent": [5311, 5332], "body": [{"type": "para", "indent": 4, "text": ["Specifies a pattern of transform names.\n    Shape bindings that are attached to these transforms will be copied from the ", {"type": "ui", "text": ["Source Layer"]}, ".\n    The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match"}, " VEX function."], "extent": [5332, 5555]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Filter by Shape"], "extent": [5555, 5572], "body": [{"type": "para", "indent": 4, "text": ["Specifies a pattern of shape names.\n    Shape bindings that use these shapes (and also match the ", {"type": "ui", "text": ["Source Layer Bindings"]}, " pattern) will be copied from the ", {"type": "ui", "text": ["Source Layer"]}, ".\n    The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match"}, " VEX function."], "extent": [5572, 5830]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Bindings"], "extent": [5830, 5846], "body": [{"type": "para", "indent": 4, "text": ["Specifies the number of shape bindings to create from existing shapes."], "extent": [5846, 5922]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [5922, 5930], "body": [{"type": "para", "indent": 4, "text": ["Toggles whether the shape binding is created."], "extent": [5954, 6005]}], "container": true, "attrs": {"id": "enablebinding#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Name"], "extent": [6005, 6017], "body": [{"type": "para", "indent": 4, "text": ["The name of a shape in the agent\u2019s shape library."], "extent": [6017, 6072]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [6072, 6080], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Agents"], "extent": [6080, 6092], "body": [{"type": "para", "indent": 8, "text": ["Agent primitives to be modified."], "extent": [6092, 6134]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shape Geometry"], "extent": [6134, 6154], "body": [{"type": "para", "indent": 8, "text": ["Optional input providing shapes to be imported when ", {"type": "ui", "text": ["Add Shapes by Name"]}, " is enabled."], "extent": [6154, 6250]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Capture Pose"], "extent": [6250, 6268], "body": [{"type": "para", "indent": 8, "text": ["Optional input providing the character\u2019s capture pose for skin deformation.\n        This overrides the capture data stored in the shape geometry\u2019s ", {"type": "code", "text": ["boneCapture"]}, " attribute."], "extent": [6268, 6449]}, {"type": "para", "indent": 8, "text": ["Each joint in the skeleton is represented by a point, where the ", {"type": "code", "text": ["P"]}, " and ", {"type": "code", "text": ["transform"]}, " (", {"type": "code", "text": ["matrix3"]}, ") attributes contain the joint\u2019s transform.\n        The point\u2019s ", {"type": "code", "text": ["name"]}, " attribute contains the joint\u2019s name, and is matched up with the capture paths in the shape geometry\u2019s ", {"type": "code", "text": ["boneCapture"]}, " attribute.\n        The skeleton\u2019s hierarchy is represented by two-point polygons between the points for each child joint and its parent."], "extent": [6449, 6876]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [6876, 6885], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Agents"], "extent": [6885, 6897], "body": [{"type": "para", "indent": 8, "text": ["The modified agent primitives."], "extent": [6897, 6937]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [6937, 6946], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agent", "type": "link", "text": "", "fullpath": "/nodes/sop/agent"}], "extent": [6946, 6965]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agentclip", "type": "link", "text": "", "fullpath": "/nodes/sop/agentclip"}], "extent": [6965, 6988]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agentdefinitioncache", "type": "link", "text": "", "fullpath": "/nodes/sop/agentdefinitioncache"}], "extent": [6988, 7022]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/crowdassignlayers", "type": "link", "text": "", "fullpath": "/nodes/sop/crowdassignlayers"}], "extent": [7022, 7053]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--agentfromrig", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--agentfromrig"}], "extent": [7053, 7087]}], "container": true}], "text": "Related"}], "title": ["Agent Layer"], "summary": ["Adds new shapes and layers to an agent primitive."]}