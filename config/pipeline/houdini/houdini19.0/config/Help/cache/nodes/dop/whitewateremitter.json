{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "whitewateremitter", "icon": "SHELF/whitewater", "tags": "FLIP", "since": "13.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Whitewater Emitter"], "extent": [105, 128]}, {"type": "summary", "indent": 0, "text": ["A POP solver that generates particles for the Whitewater Solver."], "extent": [128, 201]}, {"type": "para", "indent": 0, "text": ["The Whitewater Emitter emits volumetric particle clouds based on the input from a SOP Source, usually a ", {"scheme": "Node", "value": "/nodes/sop/whitewatersource", "type": "link", "text": ["Whitewater Source"], "fullpath": "/nodes/sop/whitewatersource"}, " node.  It is designed to be used as input to the ", {"scheme": "Node", "value": "/nodes/dop/whitewatersolver", "type": "link", "text": ["Whitewater Solver"], "fullpath": "/nodes/dop/whitewatersolver"}, "."], "extent": [201, 448]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [448, 460], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Birth"], "extent": [460, 473], "body": [{"type": "para", "indent": 0, "text": ["This operator has two methods for emitting particles. You can\nuse these methods together or separately:"], "extent": [473, 579]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Impulse"]}, " creates a certain number of particles for each input particle each time the node cooks."], "extent": [579, 680]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Constant"]}, " creates a certain number of particles per input particle per second."], "extent": [680, 763]}], "container": true}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Impulse Count"], "extent": [763, 778], "body": [{"type": "para", "indent": 4, "text": ["Number of particles to emit each time the node cooks."], "extent": [807, 866]}], "container": true, "attrs": {"channels": "/impulserate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Const. Birth Rate"], "extent": [866, 885], "body": [{"type": "para", "indent": 4, "text": ["Number of particles to emit per second."], "extent": [914, 959]}], "container": true, "attrs": {"channels": "/impulserate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Emission Attribute"], "extent": [959, 979], "body": [{"type": "para", "indent": 8, "text": ["The specified attribute can be used to control whether a point is\n        replicated or not.  This attribute should be a float value to represent\n        the probability of replicating the source point."], "extent": [979, 1191]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [1191, 1197], "body": [{"type": "para", "indent": 8, "text": ["The seed used to generate random particle clouds."], "extent": [1197, 1256]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Just Born Group"], "extent": [1256, 1273], "body": [{"type": "para", "indent": 4, "text": ["Name of a group to put the new points into.  The particles will only be in this group the same substep that they were created."], "extent": [1273, 1405]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Life Expectancy"], "extent": [1405, 1422], "body": [{"type": "para", "indent": 4, "text": ["How long the particle will live (in seconds)."], "extent": [1443, 1494]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1494, 1504], "body": [{"type": "para", "indent": 14, "text": ["When used as input to the ", {"scheme": "Node", "value": "/nodes/dop/whitewatersolver", "type": "link", "text": ["Whitewater Solver"], "fullpath": "/nodes/dop/whitewatersolver"}, ", the ", {"type": "ui", "text": ["Life Expectancy"]}, " will typically be overwritten for each different particle type as specified in the solver."], "extent": [1504, 1707]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"channels": "/life"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Life Variance"], "extent": [1707, 1722], "body": [{"type": "para", "indent": 4, "text": ["Particles will live the number of seconds in ", {"type": "ui", "text": ["Life\n    expectancy"]}, ", plus or minus this number of seconds. Use 0 for no\n    variance."], "extent": [1746, 1886]}], "container": true, "attrs": {"channels": "/lifevar"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "shape", "container": true, "type": "h", "indent": 0, "text": ["Shape"], "extent": [1886, 1906], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Shape"], "extent": [1906, 1914], "body": [{"type": "para", "indent": 8, "text": ["The shape of the generated point cloud before transformation to each \n        input point."], "extent": [1914, 2014]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Offset"], "extent": [2014, 2031], "body": [{"type": "para", "indent": 8, "text": ["The distance along the velocity vector to replicate the particles, ranging from 0 at the beginning of the velocity vector to 1 at the end."], "extent": [2031, 2179]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Stretch"], "extent": [2179, 2197], "body": [{"type": "para", "indent": 8, "text": ["A scale applied to the input point speed before stretching the particle clouds along the velocity vector."], "extent": [2197, 2312]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Scale"], "extent": [2312, 2327], "body": [{"type": "para", "indent": 8, "text": ["A uniform factor applied to the replicated point cloud scale, in addition\n        to any scaling attributes on the input points."], "extent": [2327, 2465]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "noise", "container": true, "type": "h", "indent": 0, "text": ["Noise"], "extent": [2465, 2485], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Noise"], "extent": [2485, 2496], "body": [{"type": "para", "indent": 8, "text": ["Add noise to the replicated point cloud in local space.  The noise\n        will respect the input point\u2019s ", {"type": "code", "text": ["rest"]}, " attribute if present."], "extent": [2496, 2640]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [2640, 2652], "body": [{"type": "para", "indent": 8, "text": ["Specifies the noise type."], "extent": [2652, 2687]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [2687, 2698], "body": [{"type": "para", "indent": 8, "text": ["The scale of the noise. Decreasing frequency increases feature size."], "extent": [2698, 2776]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [2776, 2784], "body": [{"type": "para", "indent": 8, "text": ["Allows the noise field to be effectively moved through space."], "extent": [2784, 2855]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude"], "extent": [2855, 2866], "body": [{"type": "para", "indent": 8, "text": ["The amplitude of the noise."], "extent": [2866, 2903]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [2903, 2914], "body": [{"type": "para", "indent": 8, "text": ["The amplitude reduction of higher frequency noise contributions."], "extent": [2914, 2988]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attenuation"], "extent": [2988, 3001], "body": [{"type": "para", "indent": 8, "text": ["Raises the noise to the given exponent."], "extent": [3001, 3050]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Turbulence"], "extent": [3050, 3062], "body": [{"type": "para", "indent": 8, "text": ["The number of noise generations to use."], "extent": [3062, 3111]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [3111, 3128], "body": [{"type": "para", "indent": 0, "text": ["The parameters on this tab let you control which and how attributes are initialized on the emitted particles. "], "extent": [3128, 3241]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Initial Velocity"], "extent": [3241, 3259], "body": [{"type": "para", "indent": 4, "text": ["How to set the initial velocity of the emitted particles."], "extent": [3259, 3323]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use inherited velocity"], "extent": [3323, 3351], "body": [{"type": "para", "indent": 8, "text": ["Use the inherited velocity attribute as the initial velocity\n        of the particles."], "extent": [3351, 3446]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add to inherited velocity"], "extent": [3446, 3477], "body": [{"type": "para", "indent": 8, "text": ["Add the inherited velocity attribute to the values from the\n        ", {"type": "ui", "text": ["Velocity"]}, " and ", {"type": "ui", "text": ["Variance"]}, " parameters below."], "extent": [3477, 3601]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set initial velocity"], "extent": [3601, 3627], "body": [{"type": "para", "indent": 8, "text": ["Set the initial value of the velocity attribute using the\n        ", {"type": "ui", "text": ["Velocity"]}, " and ", {"type": "ui", "text": ["Variance"]}, " parameters below."], "extent": [3627, 3750]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Inherit Velocity"], "extent": [3750, 3768], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Initial velocity"]}, " is ", {"type": "ui", "text": ["Use inherited velocity"]}, " or ", {"type": "ui", "text": ["Add\n    to inherited velocity"]}, ", this is the proportion of the inherited velocity\n    to use. Use ", {"type": "code", "text": ["1"]}, " for the full inherited value, ", {"type": "code", "text": ["0.5"]}, " to half the\n    inherited value, and so on."], "extent": [3796, 4044]}], "container": true, "attrs": {"channels": "/inheritvel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radial Velocity"], "extent": [4044, 4061], "body": [{"type": "para", "indent": 8, "text": ["The proportion of the velocity in the radial direction to inherit."], "extent": [4061, 4137]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity"], "extent": [4137, 4147], "body": [{"type": "para", "indent": 4, "text": ["Set or add to velocity attribute."], "extent": [4181, 4220]}], "container": true, "attrs": {"channels": "/velx /vely /velz"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Variance"], "extent": [4220, 4230], "body": [{"type": "para", "indent": 4, "text": ["Variance to velocity set above. The node will add +/- from 0 to\n    this number along each axis to the ", {"type": "ui", "text": ["Velocity"]}, " parameter."], "extent": [4264, 4396]}], "container": true, "attrs": {"channels": "/varx /vary /varz"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Stream"], "extent": [4396, 4409], "body": [{"type": "include_group", "body": [{"ext": "popCommonParms#streamnameParms/", "type": "include", "indent": 4, "role": "item", "extent": [4409, 4455]}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Whitewater Emitter"], "summary": ["A POP solver that generates particles for the Whitewater Solver."], "included": ["/nodes/dop/popCommonParms"]}