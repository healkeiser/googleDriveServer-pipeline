{"type": "root", "attrs": {"type": "node", "context": "cop2", "internal": "loop", "icon": "COP2/loop", "since": "16.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Loop"], "extent": [74, 83]}, {"type": "summary", "indent": 0, "text": ["Cooks the subnet COPs multiple times in a loop, accumulating the results."], "extent": [83, 165]}, {"type": "para", "indent": 0, "text": ["The Loop COP is a COP subnet container. It cooks the COP network inside it \nmultiple times. It either feeds the loop output back into the loop input, or\naccumulates the results by adding the loop output images together."], "extent": [165, 386]}, {"type": "para", "indent": 0, "text": ["The Loop COP can iterate over a single frame multiple times or iterate from\nthe first frame to the currently cooked frame, acting more like a simulation."], "extent": [386, 541]}, {"type": "para", "indent": 0, "text": ["Inside the Loop COP, there is a ", {"scheme": "Node", "value": "/nodes/cop2/loopdata", "type": "link", "text": ["Loop Data COP"], "fullpath": "/nodes/cop2/loopdata"}, " which is \nconnected to the first subnet input. The results of the previous iteration will\nbe fed back to this node. The first iteration will use the first input\u2019s \nimages. "], "extent": [541, 782]}, {"type": "para", "indent": 0, "text": ["When in ", {"type": "code", "text": ["Single Frame"]}, " loop mode, the ", {"type": "code", "text": ["$AI"]}, " local variable can be used within \nthe loop subnet to access the loop iteration (starting at 0 for the first \niteration). When in ", {"type": "code", "text": ["From Start Frame"]}, " loop mode, ", {"type": "code", "text": ["$F"]}, " can be used as usual."], "extent": [782, 1014]}, {"type": "para", "indent": 0, "text": ["There are some restrictions placed on the COP network within the Loop COP. \nThe network cannot change the frame range, image resolution, or add, remove, \nor modify planes (an error will result if you do). The ", {"scheme": "Node", "value": "/nodes/cop2/loopdata", "type": "link", "text": ["Loop Data COP"], "fullpath": "/nodes/cop2/loopdata"}, " should \nalways be connected directly to the first subnet input and\nall COPs within the Loop subnet should use it the first input instead of the \nfirst subnet input connector. The other inputs (2-4) can be used directly."], "extent": [1014, 1479]}, {"type": "para", "indent": 0, "text": ["Finally, the COP with the Render flag set is used as the loop output (as COPs\nallow multiple display flags to be set)."], "extent": [1479, 1599]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1599, 1611], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 2, "text": ["Loop"], "extent": [1611, 1625], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 6, "text": ["Loop"], "extent": [1625, 1638], "body": [{"type": "para", "indent": 10, "text": ["Selects the looping mode."], "extent": [1638, 1675]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 10, "text": ["Single Frame"], "extent": [1675, 1699], "body": [{"type": "para", "indent": 14, "text": ["Loops multiple times over the same frame. This can be used to \n              apply the same effect multiple times."], "extent": [1699, 1829]}], "container": true}, {"type": "dt", "indent": 10, "text": ["From Start Frame"], "extent": [1829, 1857], "body": [{"type": "para", "indent": 14, "text": ["Loops from the start frame of the sequence to the current frame.\n              When used with ", {"type": "code", "text": ["Feedback"]}, " loop mode, the effect of the COP \n              network is applied gradually over time like a simulation."], "extent": [1857, 2083]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 6, "text": ["Iterations"], "extent": [2083, 2101], "body": [{"type": "para", "indent": 10, "text": ["When using ", {"type": "code", "text": ["Single Frame"]}, " looping, this parameter determines the \n          number of times to loop."], "extent": [2101, 2213]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2213, 2222], "body": [{"type": "bullet_group", "body": [{"blevel": 4, "type": "bullet", "indent": 2, "text": [{"scheme": "Node", "value": "/nodes/cop2/loopdata", "type": "link", "text": "", "fullpath": "/nodes/cop2/loopdata"}], "extent": [2222, 2248]}], "container": true}], "text": "Related"}], "title": ["Loop"], "summary": ["Cooks the subnet COPs multiple times in a loop, accumulating the results."]}